@startuml

skinparam classAttributeIconSize 0
skinparam classFontStyle Bold
skinparam style strictuml hide empty members

package dnd
{
    package personnage
    {
        class Personnage
        {
            +<<create>> Personnage(race : Race, classe : Classe)
            - m_nom : String
            - m_etat : Boolean
            ' Race : mettre une composition
            ' Classe : mettre une composition
            ' Inventaire d'équipements : mettre une composition
            ' Équipements : mettre une composition
            + getNom() : String
            + getEtat() : Boolean
            + toString() : String
        }

        ' Début classes personnages




        class Inventaire
        {
            - m_inventaire : Item[*]
            + toString() : String
        }

        class EquipementPersonnage
        {
            - m_equipement : Item[*]
            + toString() : String
        }

        class Caracteristiques
        {
            ' Membres de la classe
            - m_pv : Integer
            - m_force : Integer
            - m_dexterite : Integer
            - m_vitesse : Integer
            - m_initiative : Integer
            ' Ctor
            + <<create>> Caracteristiques(pv : Integer, force : Integer, dexterite : Integer, vitesse : Integer, initiative : Integer)
            ' Getters
            + getPV() : Integer
            + getForce() : Integer
            + getDexterite() : Integer
            + getVitese() : Integer
            + getInitiative() : Integer
            ' Setters
            + setPV(pv : Integer)
            + toString() : String
        }


        Personnage "*" *--> "1" race.Race
        Personnage "*" *--> classe.Classe
        Personnage "*" *--> "1" Caracteristiques : possède
        Personnage "1" *--> "est équipé de" EquipementPersonnage
        Personnage "1" *--> "possède" Inventaire : possède
        Inventaire "*" o-- "- m_items[*] : Objets du personnage" dnd.objet.Item : possède
        EquipementPersonnage "1" o-- "- m_arme_equipee : Arme\n - m_armure_equipee : Armure" dnd.objet.Item

        package race
        {
            abstract class Race <<abstract>>
            {
                +{abstract} bonusCreation()
                +{abstract} toString()
            }

            class Humain
            {
                +<<create>> Humain()
            }

            class Elfe
            {
                +<<create>> Elfe()
            }

            class Nain
            {
                +<<create>> Nain()
            }

            class Halflin
            {
                +<<create>> Halflin()
            }

            Race "*" *--> "Peut être" Humain
            Race "*" *--> "Peut être" Elfe
            Race "*" *--> "Peut être" Nain
            Race "*" *--> "Peut être" Halflin
        }

        package classe
        {

            abstract class Classe <<abstract>>
            {
            +{abstract} bonusCreation()
            +{abstract} toString()
            }

            class Guerrier
            {
                +<<create>>  Guerrier()
            }

            class Clerc
            {
                +<<create>> Clerc()
            }

            class Magiciens
            {
                +<<create>> Magiciens()
            }

            class Roublard
            {
                +<<create>> Roublard()
            }

            Classe "*" *--> "1" Guerrier : peut être
            Classe "*" *--> "1" Clerc : peut être
            Classe "*" *--> "1" Magiciens : peut être
            Classe "*" *--> "1" Roublard : peut être
        }
    }

    package objet
    {
        class Item
        {
            - m_nom : String
            + <<create>> Item(name : String)
            + getName() : String
        }

        class Arme extends Item
        {
            - m_degat : Integer
            + <<create>> Arme(name : String, degat : Integer)
        }

        class Armure extends Item
        {
            - m_armure : Integer
            + <<create>> Armure(name : String, armure : Integer)
        }

        class ArmeCourante extends Arme
        {

        }

        class ArmeGuerre extends Arme
        {

        }

        class ArmeDistance extends Arme
        {

        }

        class ArmureLegere extends Armure
        {

        }

        class ArmureLourde extends Armure
        {

        }


    ' Item "*" *--> "- m_degat : (dé)\n- m_portee : Integer" ArmeCourante: contient des
    ' Item "*" *--> "- m_degat : (dé)\n- m_portee : Integer" ArmeGuerre: contient des
    ' Item "*" *--> "- m_degat : (dé)\n- m_portee : Integer" ArmeDistance: contient des
    ' Item "*" *--> "- m_armure : Integer" ArmureLegere: contient des
    ' Item "*" *--> "- " ArmureLourde: contient des

    }

    package donjon
    {
        class Carte
        {
            +<<create>> Carte
            -m_listeMonstrePosition : [*]
            -m_listePositionMonstre : [*]
            -m_listePersonnagePosition : [*]
            -m_listePositionPersonnage : [*]
            -m_listeObjetPosition : [*]
            -m_listePositionObjet : [*]
            -m_listeObstaclePosition : [*]
            -m_listePositionObstacle : [*]

            ' methode getQuoiEstIci (position)
            ' methode getOuEsTruc (truc)

        }

        class Position
       {
            -m_x : Integer
            -m_y : Integer
       }
    }

    package ennemi
    {
        class Monstre
        {
        +<<create>> Monstre
        + {static} m_id : Integer
        - m_espece : String
        - m_attaque :
        ' Objet caractérisitique
        }
    }

    package tourDeJeu
    {
        class Action
        {

        }

        class seDeplacer extends Action
        {

        }

        class Attaquer extends Action
        {

        }

        class sEquiper extends Action
        {

        }

    }
}



@enduml
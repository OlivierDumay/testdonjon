@startuml

skinparam classAttributeIconSize 0
skinparam classFontStyle Bold
skinparam style strictuml hide empty members

class Main
{

}

package dnd
{
    package gameObject
    {
        interface GameObject <<Interface>>
        {
            +void deplacement (destination : Position )
            +void attaque (defenseur : GameObject)
            +void prendre(personnage : GameObject)
            +getEtiquette(objet : GameObject)
        }

        class Caracteristiques
        {
            - m_pv : Integer
            - m_force : Integer
            - m_dexterite : Integer
            - m_vitesse : Integer
            - m_initiative : Integer
            + <<create>> Caracteristiques(pv : Integer, force : Integer, dexterite : Integer, vitesse : Integer, initiative : Integer)
            + getPV() : Integer
            + getForce() : Integer
            + getDexterite() : Integer
            + getVitese() : Integer
            + getInitiative() : Integer
            + setPV(pv : Integer)
            + toString() : String
        }

        package personnage
        {
            class Personnage implements dnd.GameObject.GameObject
            {
                +<<create>> Personnage(race : Race, classe : Classe)
                - m_nom : String
                - m_etat : Boolean
                - m_etiquette : String
                + getNom() : String
                + getEtat() : Boolean
                + toString() : String
                +void deplacement (destination : Position )
                +void attaque (defenseur : GameObject)
                +void prendre(personnage : GameObject)
            }

            class Inventaire
            {
                + toString() : String
            }

            class EquipementPersonnage
            {
                + toString() : String
            }

            Personnage "*" *--> "1" race.Race
            Personnage "*" *--> classe.Classe
            Personnage "*" *--> "1" Caracteristiques : possède
            Personnage "1" *--> "est équipé de" EquipementPersonnage
            Personnage "1" *--> "possède" Inventaire : possède
            Inventaire "*" o-- "- m_items[*] : Objets du personnage" dnd.objet.Item : possède
            EquipementPersonnage "1" o-- "- m_arme_equipee : Arme\n - m_armure_equipee : Armure" dnd.objet.Item : est équipé de

            package race
            {
                abstract class Race <<abstract>>
                {
                    +{abstract} bonusCreation()
                    +{abstract} toString()
                }

                class Humain
                {
                    +<<create>> Humain()
                }

                class Elfe
                {
                    +<<create>> Elfe()
                }

                class Nain
                {
                    +<<create>> Nain()
                }

                class Halflin
                {
                    +<<create>> Halflin()
                }

                Race "*" *--> "Peut être" Humain
                Race "*" *--> "Peut être" Elfe
                Race "*" *--> "Peut être" Nain
                Race "*" *--> "Peut être" Halflin
            }

            package classe
            {
                abstract class Classe <<abstract>>
                {
                    +{abstract} bonusCreation()
                    +{abstract} toString()
                }

                class Guerrier
                {
                    +<<create>> Guerrier()
                }

                class Clerc
                {
                    +<<create>> Clerc()
                }

                class Magiciens
                {
                    +<<create>> Magiciens()
                }

                class Roublard
                {
                    +<<create>> Roublard()
                }

                Classe "*" *--> "1" Guerrier : peut être
                Classe "*" *--> "1" Clerc : peut être
                Classe "*" *--> "1" Magiciens : peut être
                Classe "*" *--> "1" Roublard : peut être
            }
        }

        package ennemi
        {
            class Monstre implements dnd.gameObject.GameObject
            {
                +<<create>> Monstre
                + {static} m_id : Integer
                - m_espece : String
                - m_attaque :
                - m_etiquette : String
                +void deplacement (destination : Position )
                +void attaque (defenseur : GameObject)
            }
        }
    }

    package objet
    {
        class Item
        {
            - m_nom : String
            - m_etiquette : String
            + <<create>> Item(name : String)
            + getName() : String
        }

        class Arme extends Item
        {
            - m_degat : Integer
            + <<create>> Arme(name : String, degat : Integer)
        }

        class Armure extends Item
        {
            - m_armure : Integer
            + <<create>> Armure(name : String, armure : Integer)
        }

        class ArmeCourante extends Arme
        {
        }

        class ArmeGuerre extends Arme
        {
        }

        class ArmeDistance extends Arme
        {
        }

        class ArmureLegere extends Armure
        {
        }

        class ArmureLourde extends Armure
        {
        }
    }

    package donjon
    {
        class Carte
        {
            +<<create>> Carte
            + getQuoiEstIci(position : Position) : GameObject
        }

        Carte "*" *--> "- m_listeGameObjectPosition[*] : Position selon GameObject (hashmap)" dnd.GameObject.GameObject : possède
        Carte "*" *--> "- m_listPositionGameObject[*] : GameObject selon la Position (hashmap)" dnd.GameObject.GameObject : possède

        class Position
        {
            -m_x : Integer
            -m_y : Integer
            +calculDistance(origine : GameObject, destination : Position)
        }
    }

    package partie
    {
        class Case
        {
            - m_contenu : ArrayList<Asset>
            - m_position : Position
            + Case(position : Position)
            + ajouter(asset : Asset) : void
            + retirer(asset : Asset) : void
            + getContenu() : ArrayList<Asset>
            + getPosition() : Position
            + toString() : String
        }

        Case "1" o-- "1" dnd.donjon.Position : possède
        Case "*" *--> dnd.Asset : contient

        package tourDeJeu
        {
            class Tour
            {
                -m_numeroDuTour : Integer
                -m_ordre : [*]
            }
        }
    }

    package des
    {
        class Des
        {
            +Integer lancerDes (nombreDeDes : Integer, nombreDeFace : Integer)
        }
    }
}

@enduml
